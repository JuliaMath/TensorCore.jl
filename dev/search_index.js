var documenterSearchIndex = {"docs":
[{"location":"#TensorCore.jl","page":"Home","title":"TensorCore.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is intended as a lightweight foundation for tensor operations across the Julia ecosystem. Currently it exports two core operations, hadamard and tensor, and corresponding unicode operators ⊙ and ⊗, respectively.","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"hadamard\nhadamard!\ntensor\ntensor!","category":"page"},{"location":"#TensorCore.hadamard","page":"Home","title":"TensorCore.hadamard","text":"hadamard(a, b)\na ⊙ b\n\nFor arrays a and b, perform elementwise multiplication. a and b must have identical axes.\n\n⊙ can be passed as an operator to higher-order functions.\n\nExamples\n\njulia> a = [2, 3]; b = [5, 7];\n\njulia> a ⊙ b\n2-element Array{Int64,1}:\n 10\n 21\n\njulia> a ⊙ [5]\nERROR: DimensionMismatch(\"Axes of `A` and `B` must match, got (Base.OneTo(2),) and (Base.OneTo(1),)\")\n[...]\n\nSee also hadamard!(y, a, b).\n\n\n\n\n\n","category":"function"},{"location":"#TensorCore.hadamard!","page":"Home","title":"TensorCore.hadamard!","text":"hadamard!(dest, A, B)\n\nSimilar to hadamard(A, B) (which can also be written A ⊙ B), but stores its results in the pre-allocated array dest.\n\n\n\n\n\n","category":"function"},{"location":"#TensorCore.tensor","page":"Home","title":"TensorCore.tensor","text":"tensor(A, B)\nA ⊗ B\n\nCompute the tensor product of A and B. If C = A ⊗ B, then C[i1, ..., im, j1, ..., jn] = A[i1, ... im] * B[j1, ..., jn].\n\nFor vectors v and w, the Kronecker product is related to the tensor product by kron(v,w) == vec(w ⊗ v) or w ⊗ v == reshape(kron(v,w), (length(w), length(v))).\n\nExamples\n\njulia> a = [2, 3]; b = [5, 7, 11];\n\njulia> a ⊗ b\n2×3 Array{Int64,2}:\n 10  14  22\n 15  21  33\n\nSee also tensor!(Y,A,B).\n\n\n\n\n\n","category":"function"},{"location":"#TensorCore.tensor!","page":"Home","title":"TensorCore.tensor!","text":"tensor!(dest, A, B)\n\nSimilar to tensor(A, B) (which can also be written A ⊗ B), but stores its results in the pre-allocated array dest.\n\n\n\n\n\n","category":"function"}]
}
